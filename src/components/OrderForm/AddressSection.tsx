import Icon from "@/components/ui/icon";
import FormField from "./FormField";

interface AddressSectionProps {
  formData: {
    loadingAddress: string;
    unloadingAddress: string;
    loadingFloor: string;
    unloadingFloor: string;
  };
  onInputChange: (field: string, value: string) => void;
  focusedField: string | null;
  setFocusedField: (field: string | null) => void;
}

const AddressSection = ({ 
  formData, 
  onInputChange, 
  focusedField, 
  setFocusedField 
}: AddressSectionProps) => {
  const floorOptions = [
    { value: "ground", label: "üè¢ 1 —ç—Ç–∞–∂ / –ó–µ–º–ª—è" },
    { value: "elevator", label: "üõó –í—ã—Å–æ–∫–∏–π —ç—Ç–∞–∂ + –ª–∏—Ñ—Ç" },
    { value: "stairs-2", label: "üö∂‚Äç‚ôÇÔ∏è 2 —ç—Ç–∞–∂ –±–µ–∑ –ª–∏—Ñ—Ç–∞" },
    { value: "stairs-3", label: "üö∂‚Äç‚ôÇÔ∏è 3 —ç—Ç–∞–∂ –±–µ–∑ –ª–∏—Ñ—Ç–∞" },
    { value: "stairs-4", label: "üö∂‚Äç‚ôÇÔ∏è 4 —ç—Ç–∞–∂ –±–µ–∑ –ª–∏—Ñ—Ç–∞" },
    { value: "stairs-5plus", label: "üèÉ‚Äç‚ôÇÔ∏è 5+ —ç—Ç–∞–∂ –±–µ–∑ –ª–∏—Ñ—Ç–∞" }
  ];

  return (
    <div className="space-y-6 p-6 bg-muted/30 rounded-2xl border border-border/50">
      <h3 className="text-xl font-bold text-foreground flex items-center gap-2 animate-fadeInUp" style={{ animationDelay: '1000ms' }}>
        <Icon name="MapPin" size={20} className="text-primary" />
        –ê–¥—Ä–µ—Å–∞ –∏ —ç—Ç–∞–∂–Ω–æ—Å—Ç—å
      </h3>
      
      <div className="grid md:grid-cols-2 gap-6">
        <div className="space-y-4">
          <div className="group animate-fadeInUp" style={{ animationDelay: '1100ms' }}>
            <FormField
              id="loadingAddress"
              label="–ê–¥—Ä–µ—Å –∑–∞–≥—Ä—É–∑–∫–∏"
              icon="MapPin"
              iconColor="text-green-500"
              type="text"
              placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞/–æ—Ñ–∏—Å"
              value={formData.loadingAddress}
              onChange={(value) => onInputChange("loadingAddress", value)}
              onFocus={() => setFocusedField("loadingAddress")}
              onBlur={() => setFocusedField(null)}
              focusedField={focusedField}
              className="hover:border-green-500/50 focus:border-green-500"
            />
          </div>

          <div className="group animate-fadeInUp" style={{ animationDelay: '1200ms' }}>
            <FormField
              id="loadingFloor"
              label="–≠—Ç–∞–∂ –∑–∞–≥—Ä—É–∑–∫–∏ / –õ–∏—Ñ—Ç"
              type="select"
              value={formData.loadingFloor}
              onChange={(value) => onInputChange("loadingFloor", value)}
              placeholder="–£—Å–ª–æ–≤–∏—è –∑–∞–≥—Ä—É–∑–∫–∏"
              options={floorOptions}
              className="hover:border-green-500/50"
            />
          </div>
        </div>

        <div className="space-y-4">
          <div className="group animate-fadeInUp" style={{ animationDelay: '1300ms' }}>
            <FormField
              id="unloadingAddress"
              label="–ê–¥—Ä–µ—Å –≤—ã–≥—Ä—É–∑–∫–∏"
              icon="MapPin"
              iconColor="text-red-500"
              type="text"
              placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞/–æ—Ñ–∏—Å"
              value={formData.unloadingAddress}
              onChange={(value) => onInputChange("unloadingAddress", value)}
              onFocus={() => setFocusedField("unloadingAddress")}
              onBlur={() => setFocusedField(null)}
              focusedField={focusedField}
              className="hover:border-red-500/50 focus:border-red-500"
            />
          </div>

          <div className="group animate-fadeInUp" style={{ animationDelay: '1400ms' }}>
            <FormField
              id="unloadingFloor"
              label="–≠—Ç–∞–∂ –≤—ã–≥—Ä—É–∑–∫–∏ / –õ–∏—Ñ—Ç"
              type="select"
              value={formData.unloadingFloor}
              onChange={(value) => onInputChange("unloadingFloor", value)}
              placeholder="–£—Å–ª–æ–≤–∏—è –≤—ã–≥—Ä—É–∑–∫–∏"
              options={floorOptions}
              className="hover:border-red-500/50"
            />
          </div>
        </div>
      </div>
    </div>
  );
};

export default AddressSection;